@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model gig_it.Pages.IndexModel

<section x-data="setup_main_page()" class="text-center flex flex-col items-center justify-center gap-2">
    <h1 class="text-success text-5xl display-4 flex flex-row items-center">
        Welcome to Gig IT
        <box-icon size="lg" :color="selected_box_icon_color" name="rocket"></box-icon>
    </h1>

    <div id="gigs_grid" x-init="start_view_timers()" class="grid grid-cols-1 gap-2">

        <div
            x-show="views.intro.show"
            x-transition:enter="transition ease-out duration-300"
            x-transition:enter-start="opacity-0 scale-90"
            x-transition:enter-end="opacity-100 scale-100"
            x-transition:leave="transition ease-in duration-300"
            x-transition:leave-start="opacity-100 scale-100"
            x-transition:leave-end="opacity-0 scale-90"
            :class="current_gradient">
            <div class="text-accent rounded-3xl">
                <p>Enter your Gig App, mileage and offer below, and see how you're doing compared to other drivers.</p>
                <i>All users and data are completely anonymous.</i>
            </div>

        </div>


        <div
            class="grid grid-cols-1 gap-4 lg:grid-cols-2">

            <div
                x-show="views.entry_form.show"
                x-transition:enter="transition ease-out duration-300"
                x-transition:enter-start="opacity-0 scale-90"
                x-transition:enter-end="opacity-100 scale-100"
                x-transition:leave="transition ease-in duration-300"
                x-transition:leave-start="opacity-100 scale-100"
                x-transition:leave-end="opacity-0 scale-90"

                class="border-0 border-red-500"
                id="gig_entry_form">
                <partial name="_GigEntryForm"/>
            </div>

            <div
                id="gig_stats"
                hx-get="@Url.Page("Index", "Stats")"
                hx-swap="innerHTML"
                hx-trigger="load"
                hx-indicator="#gig_stats_loader"
                hx-target="#gig_stats"
                x-show="views.stats.show"
                x-transition:enter="transition ease-out duration-300"
                x-transition:enter-start="opacity-0 scale-90"
                x-transition:enter-end="opacity-100 scale-100"
                x-transition:leave="transition ease-in duration-300"
                x-transition:leave-start="opacity-100 scale-100"
                x-transition:leave-end="opacity-0 scale-90">
                <span id="gig_stats_loader" class="htmx-indicator">
                    <label>loading ...</label>
                    <img class="w-52" alt="bars" src="~/img/loaders/loader_10.svg"/>
                </span>
                <partial name="_GigStats"></partial>
            </div>
        </div>

        <div
            x-show="views.leaderboard.show"
            x-transition:enter="transition ease-out duration-300"
            x-transition:enter-start="opacity-0 scale-90"
            x-transition:enter-end="opacity-100 scale-100"
            x-transition:leave="transition ease-in duration-300"
            x-transition:leave-start="opacity-100 scale-100"
            x-transition:leave-end="opacity-0 scale-90"

            :class="current_gradient"
            hx-trigger="load"
            hx-get="@Url.Page("Index", "Search", new { take = 10, skip = 0, debug = false })"
            hx-swap="innerHTML"
            hx-indicator="#leaderboard_loader"
            id="leaderboard">

            <partial name="_Leaderboard"/>

            <span id="leaderboard_loader" class="htmx-indicator">
                <label>loading ...</label>
                <img class="w-52" alt="bars" src="~/img/loaders/loader_10.svg"/>
            </span>
        </div>

    </div>
</section>
<script>
    function setup_main_page(){
        return {
            views: {
                intro: { show: false },
                leaderboard: { show: false },
                entry_form: { show: false },
                stats: { show: false },
             },
            start_view_timers() {
                setTimeout(()=> this.views.intro.show = true , 250);
                setTimeout(()=> this.views.entry_form.show = true , 500);
                setTimeout(()=> this.views.stats.show = true , 750);
                setTimeout(()=> this.views.leaderboard.show = true , 1000);
            }
        }    
    }
</script>


@* GetLocationAttempt1 *@

@* *@
@* <script> *@
@* var x = document.getElementById("demo"); *@
@* *@
@* function getLocation() { *@
@*   if (navigator.geolocation) { *@
@*     navigator.geolocation.getCurrentPosition(showPosition); *@
@*   } else { *@
@*     x.innerHTML = "Geolocation is not supported by this browser."; *@
@*   } *@
@* } *@
@* *@
@* function showPosition(position) { *@
@*   x.innerHTML = "Latitude: " + position.coords.latitude + *@
@*   "<br>Longitude: " + position.coords.longitude; *@
@* } *@
@* *@
@* function showError(error) { *@
@*   switch(error.code) { *@
@*     case error.PERMISSION_DENIED: *@
@*       x.innerHTML = "User denied the request for Geolocation." *@
@*       break; *@
@*     case error.POSITION_UNAVAILABLE: *@
@*       x.innerHTML = "Location information is unavailable." *@
@*       break; *@
@*     case error.TIMEOUT: *@
@*       x.innerHTML = "The request to get user location timed out." *@
@*       break; *@
@*     case error.UNKNOWN_ERROR: *@
@*       x.innerHTML = "An unknown error occurred." *@
@*       break; *@
@*   } *@
@* } *@
@* </script> *@

@* $1$ @@click="getLocation" #1# *@
@*   <button *@
@*       hx-get *@
@*       hx-trigger="click" *@
@*       hx-page="Index" *@
@*       hx-page-handler="Stuff" *@
@*       class="btn btn-alert"> *@
@*       Go *@
@*   </button> *@
@*   $1$ <img alt="loading..." class="htmx-indicator" width="25" src="~/img/bars.svg"/> #1# *@
@*   <span id="prices"></span> *@
@* *@
@*   <span id="demo"></span> *@